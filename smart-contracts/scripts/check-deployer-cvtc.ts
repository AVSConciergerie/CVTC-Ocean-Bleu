import { ethers } from "hardhat";
import * as dotenv from "dotenv";

// Load environment variables
dotenv.config({ path: "./.env" });

async function main() {
  console.log("üîç V√âRIFICATION DU SOLDE CVTC DU D√âPLOYEUR");
  console.log("==========================================");

  const privateKey = process.env.PRIVATE_KEY;
  if (!privateKey) {
    console.error("‚ùå PRIVATE_KEY not found in .env");
    return;
  }

  // Configuration
  const provider = new ethers.JsonRpcProvider("https://data-seed-prebsc-1-s1.binance.org:8545/");
  const wallet = new ethers.Wallet(privateKey);

  // Adresses
  const cvtcTokenAddress = "0x532FC49071656C16311F2f89E6e41C53243355D3";

  // ABI du token CVTC
  const tokenABI = [
    "function balanceOf(address) view returns (uint256)",
    "function decimals() view returns (uint8)",
    "function symbol() view returns (string)"
  ];

  const tokenContract = new ethers.Contract(cvtcTokenAddress, tokenABI, provider);

  try {
    // Informations du token
    const decimals = await tokenContract.decimals();
    const symbol = await tokenContract.symbol();
    console.log(`üìä Token: ${symbol} (${decimals} d√©cimales)`);

    // V√©rifier le solde du d√©ployeur
    const deployerBalance = await tokenContract.balanceOf(wallet.address);
    console.log(`üë§ Adresse d√©ployeur: ${wallet.address}`);
    console.log(`üí∞ Solde CVTC: ${ethers.formatUnits(deployerBalance, decimals)} ${symbol}`);

    if (deployerBalance > 0) {
      console.log(`‚úÖ Le d√©ployeur a ${ethers.formatUnits(deployerBalance, decimals)} ${symbol}`);
      console.log(`üöÄ Pr√™t pour approvisionner le pool de swap`);
    } else {
      console.log(`‚ùå Le d√©ployeur n'a pas de ${symbol}`);
      console.log(`üí° Il faut d'abord obtenir des ${symbol} pour le d√©ployeur`);
      console.log(`üîó Token CVTC: ${cvtcTokenAddress}`);
    }

  } catch (error: any) {
    console.error("‚ùå Erreur:", error.message);
  }
}

main().catch((error) => {
  console.error("‚ùå Erreur g√©n√©rale:", error);
  process.exitCode = 1;
});