import { ethers } from "hardhat";

async function main() {
  console.log("üîç V√âRIFICATION TRANSACTIONS SWAP");
  console.log("=================================");

  const SWAP_ADDRESS = "0x8Cd8331a565769624A4735f613A44643DD2e2932";
  const USER_ADDRESS = "0x04554bd13ddaa139d7d84953841562ca8eb55d1b";

  console.log(`üìç Contrat swap: ${SWAP_ADDRESS}`);
  console.log(`üë§ Utilisateur: ${USER_ADDRESS}`);

  const swapContract = await ethers.getContractAt("CVTCSwap", SWAP_ADDRESS);

  try {
    // R√©cup√©rer tous les √©v√©nements Bought r√©cents
    const filter = swapContract.filters.Bought();
    const events = await swapContract.queryFilter(filter, -100); // Derniers 100 blocs seulement

    console.log(`\\nüîÑ TOUTES LES TRANSACTIONS SWAP:`);
    console.log(`üìä Nombre total de transactions: ${events.length}`);

    // Filtrer pour l'utilisateur sp√©cifique
    const userEvents = events.filter(event =>
      event.args[0].toLowerCase() === USER_ADDRESS.toLowerCase()
    );

    console.log(`üìä Transactions pour ${USER_ADDRESS}: ${userEvents.length}`);

    if (userEvents.length === 0) {
      console.log(`\\n‚ùå AUCUNE TRANSACTION TROUV√âE`);
      console.log(`Aucun swap n'a √©t√© ex√©cut√© pour cet utilisateur`);

      console.log(`\\nüîß ACTIONS REQUISES:`);
      console.log(`1. R√©ex√©cuter le premier swap`);
      console.log(`2. V√©rifier l'adresse de destination`);
      console.log(`3. V√©rifier le solde de l'op√©rateur`);
      return;
    }

    // Afficher les d√©tails des transactions de l'utilisateur
    for (let i = 0; i < userEvents.length; i++) {
      const event = userEvents[i];
      console.log(`\\nüìã TRANSACTION ${i + 1}:`);
      console.log(`üîó Hash: ${event.transactionHash}`);
      console.log(`üìÖ Bloc: ${event.blockNumber}`);
      console.log(`üë§ Acheteur: ${event.args[0]}`);
      console.log(`üí∞ BNB d√©pens√©: ${ethers.formatEther(event.args[1])} BNB`);
      console.log(`ü™ô CVTC re√ßu: ${ethers.formatUnits(event.args[2], 2)} CVTC`);
    }

    // V√©rifier la derni√®re transaction
    const lastEvent = userEvents[userEvents.length - 1];
    const expectedAmount = ethers.parseUnits("2500000000", 2); // 2.5 milliards
    const actualAmount = lastEvent.args[2];

    console.log(`\\nüéØ V√âRIFICATION MONTANT:`);
    console.log(`üìä Montant attendu: ${ethers.formatUnits(expectedAmount, 2)} CVTC`);
    console.log(`üìà Montant r√©el: ${ethers.formatUnits(actualAmount, 2)} CVTC`);

    if (actualAmount >= expectedAmount) {
      console.log(`\\n‚úÖ MONTANT CORRECT`);
      console.log(`Le swap a √©t√© ex√©cut√© avec le bon montant`);
    } else {
      console.log(`\\n‚ùå MONTANT INCORRECT`);
      console.log(`Le swap n'a pas donn√© le montant attendu`);
      const difference = expectedAmount - actualAmount;
      console.log(`Manque: ${ethers.formatUnits(difference, 2)} CVTC`);
    }

  } catch (error) {
    console.log("‚ùå Erreur:", error.message);
  }
}

main().catch(console.error);